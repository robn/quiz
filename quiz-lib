#!/usr/bin/env bash

# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# Copyright (c) 2023, Rob Norris <robn@despairlabs.com>

function quiz_select_kernel () {
  QUIZ_KERNEL_VERSION=${1:-$QUIZ_KERNEL_VERSION}
  if [[ ! -f "$RUNDIR/system/bzImage-$QUIZ_KERNEL_VERSION" ]] ; then
    fail "kernel version $QUIZ_KERNEL_VERSION not found"
  fi
}

function quiz_explode_kernel_version () {
  _quiz_kver=${1:-$QUIZ_KERNEL_VERSION}

  _quiz_kmajor=""
  _quiz_kminor=""
  _quiz_kpatch=""
  _quiz_ktype=""

  shopt -s lastpipe
  echo $_quiz_kver | perl -nE '
    ($maj, $min, $ty, $pat) = m/
      ^
        ([1-9]+[0-9]*)      # major
        \.                  # dot sep
        (0|[1-9]+[0-9]*)    # minor
        (?:[\.-]            # dot or dash sep
          (rc)?             # type
          ([0-9]+)          # patch, always 1+
        )?                  # third part is optional
      $
    /gx;
    print qq{$maj $min $pat $ty}
  ' | read _quiz_kmajor _quiz_kminor _quiz_kpatch _quiz_ktype

  if [[ -z $_quiz_kmajor || -z $_quiz_kminor ]] ; then
    fail "'$_quiz_kver' is not a valid kernel version"
  fi
  if [[ -z $_quiz_kpatch ]] ; then
    _quiz_ktype='series'
  fi
  if [[ -z $_quiz_ktype ]] ; then
    _quiz_ktype='release'
  fi
}

function quiz_setup_source () {
  case $_quiz_ktype in
  release)
    _quiz_ksrcver=$_quiz_kmajor.$_quiz_kminor
    if [[ "$_quiz_kpatch" != "0" ]] ; then
      _quiz_ksrcver="$_quiz_ksrcver.$_quiz_kpatch"
    fi
    _quiz_ktar=linux-$_quiz_ksrcver.tar.xz
    _quiz_kurl=https://cdn.kernel.org/pub/linux/kernel/v$_quiz_kmajor.x/$_quiz_ktar
    _quiz_kzopt=J
    ;;
  rc)
    _quiz_ksrcver=$_quiz_kmajor.$_quiz_kminor-rc$_quiz_kpatch
    _quiz_ktar=linux-$_quiz_ksrcver.tar.gz
    _quiz_kurl=https://git.kernel.org/torvalds/t/$_quiz_ktar
    _quiz_kzopt=z
    ;;
  *)
    fail "unknown kernel source type $_quiz_type"
  esac
}
